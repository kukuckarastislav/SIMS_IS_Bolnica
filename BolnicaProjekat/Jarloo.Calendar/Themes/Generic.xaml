<!--
    Jarloo
    http://www.jarloo.com
 
    This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License  
    http://creativecommons.org/licenses/by-sa/3.0/ 

-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:Jarloo="clr-namespace:Jarloo.Calendar" xmlns:Converters="clr-namespace:Jarloo.Calendar.Converters"
    x:Class="Jarloo.Calendar.Themes.Generic">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Resources/AppleScrollViewer.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <LinearGradientBrush x:Key="CheckedBlue" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF285AB3" Offset="0" />
        <GradientStop Color="#FF4184EC" Offset="0.5" />
        <GradientStop Color="#FF558BED" Offset="0.5" />
        <GradientStop Color="#FF7DACF0" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckedOrange" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFCA6A13" Offset="0" />
        <GradientStop Color="#FFF67D0C" Offset="0.2" />
        <GradientStop Color="#FFFE7F0C" Offset="0.2" />
        <GradientStop Color="#FFFA8E12" Offset="0.5" />
        <GradientStop Color="#FFFF981D" Offset="0.5" />
        <GradientStop Color="#FFFCBC5A" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CheckedOrangeBorder" Color="#FF8E4A1B" />
    <SolidColorBrush x:Key="CheckedBlueBorder" Color="#FF143874" />
    
    <Style x:Key="OrangeSwitchStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="30" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <DockPanel x:Name="dockPanel">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center" />
                        <Grid>
                            <Border x:Name="BackgroundBorder" BorderBrush="#FF939393" BorderThickness="1" CornerRadius="3" Height="Auto" Width="Auto">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FFB5B5B5" Offset="0" />
                                        <GradientStop Color="#FFDEDEDE" Offset="0.1" />
                                        <GradientStop Color="#FFEEEEEE" Offset="0.5" />
                                        <GradientStop Color="#FFFAFAFA" Offset="0.5" />
                                        <GradientStop Color="#FFFEFEFE" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Ellipse x:Name="Off" Width="14" Height="14" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <Line x:Name="On" X1="0" Y1="0" X2="0" Y2="14" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Grid>
                            </Border>
                            <Border BorderBrush="#FF939393" HorizontalAlignment="Left" x:Name="slider" Width="31" Height="Auto" BorderThickness="1" CornerRadius="3" RenderTransformOrigin="0.5,0.5" Margin="0">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FFF0F0F0" Offset="0" />
                                        <GradientStop Color="#FFCDCDCD" Offset="0.1" />
                                        <GradientStop Color="#FFFBFBFB" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard" />
                            </Trigger.EnterActions>
                            <Setter TargetName="On" Property="Stroke" Value="White" />
                            <Setter TargetName="Off" Property="Stroke" Value="White" />
                            <!-- Change Orange or Blue color here -->
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource CheckedOrange}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource CheckedOrangeBorder}" />
                            <!--<EventSetter Event="Checked" Handler="OrangeSwitch_Checked"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!-- ToDo: Add Style for Isenabled == False -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <EventSetter Event="Click" Handler="OrangeSwitch_Click"/>
    </Style>

    <Image x:Key="MoveNext" Source="../Images/move_next.png" RenderOptions.BitmapScalingMode="HighQuality"/>
    <Image x:Key="MovePrev" Source="../Images/move_prev.png" RenderOptions.BitmapScalingMode="HighQuality"/>

    <Converters:DateConverter x:Key="DateConverter"></Converters:DateConverter>
    <Converters:DayBorderColorConverter x:Key="DayBorderColorConverter"></Converters:DayBorderColorConverter>

    <Style x:Key="StyleMenuItemShowInfo" TargetType="{x:Type MenuItem}">
        <EventSetter Event="Click" Handler="miShowInfo_Click"/>
    </Style>

    <Style x:Key="StyleMenuItemAddEvent" TargetType="{x:Type MenuItem}">
        <EventSetter Event="Click" Handler="miAddEvent_Click"/>
    </Style>

    <Style x:Key="StyleMenuItemEditEvent" TargetType="{x:Type MenuItem}">
        <EventSetter Event="Click" Handler="miEditEvent_Click"/>
    </Style>
    
    <Style x:Key="StyleMenuItemDeleteEvent" TargetType="{x:Type MenuItem}">
        <EventSetter Event="Click" Handler="miDeleteEvent_Click"/>
    </Style>
    
    <Style x:Key="StyleDayContent" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Foreground" Value="#FFC8C8C8"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border>
                        <Grid x:Name="gd" Background="Transparent">
                            <TextBlock x:Name="txt" Text="{Binding EventText}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" Value="#FFC8C8C8" TargetName="txt"/>
                            <Setter Property="Background" Value="#FFB28E50" TargetName="gd"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="false">
                            <Setter Property="Foreground" Value="#FFC8C8C8" TargetName="txt"/>
                            <Setter Property="Background" Value="Transparent" TargetName="gd"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Setter Property="ScrollViewer.Style" Value="{StaticResource AppleScrollViewer}"/>-->

        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <CheckBox x:Name="chkEnable" Style="{StaticResource OrangeSwitchStyle}" Width="60" IsChecked="{Binding Enabled}"/>
                    <MenuItem x:Name="miShowInfo" Style="{StaticResource StyleMenuItemShowInfo}" Header="Event info"/>
                    <MenuItem x:Name="miEditEvent" Style="{StaticResource StyleMenuItemEditEvent}" Header="Edit"/>
                    <MenuItem x:Name="miDeleteEvent" Style="{StaticResource StyleMenuItemDeleteEvent}" Header="Delete"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        
        <!-- Override these key to modify the color of "SelectedUnfucoused" ListBoxItem -->
        <!--
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey }" Color="#FFB28E50"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey }" Color="Transparent"/>
        </Style.Resources>
        -->
    </Style>

    <Style x:Key="Style_FlatImageButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="Transparent" BorderThickness="0">
                        <ContentPresenter Name="content" Content="{TemplateBinding Button.Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF3C3C3C" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF323232" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Jarloo:Calendar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Jarloo:Calendar}">

                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <DockPanel x:Name="dpOutterContainer">
                            <Grid Height="30" DockPanel.Dock="Top" Background="Black">
                                <TextBlock Text="{Binding CurrentDate_Short, StringFormat='Today: \{0\}'}" FontFamily="Segoe UI" HorizontalAlignment="Left"/>
                                <TextBlock x:Name="txtblockCurrentViewingMonth" FontFamily="Segoe UI" FontSize="16" HorizontalAlignment="Center" >
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}/{1}">
                                            <Binding Path="CurrentViewingYear" UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="CurrentViewingMonth" UpdateSourceTrigger="PropertyChanged"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>
                            
                            <ItemsControl ItemsSource="{Binding DayNames}" DockPanel.Dock="Top">                              
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock TextAlignment="Center" Text="{Binding}">
                                            <TextBlock.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					                                <GradientStop Color="#FF171717" Offset="0"/>
					                                <GradientStop Color="#FF040404" Offset="1"/>
				                                </LinearGradientBrush>
                                            </TextBlock.Background>
                                        </TextBlock>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Rows="1" Columns="7" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <ItemsControl x:Name="icDays" ItemsSource="{Binding Days}">                               
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <!--Box-->
                                        <Border BorderBrush="Black" BorderThickness="1" Padding="0">
                                            
                                            <!-- TODO: rebinding the property Notes -->
                                            <Border Name="InnerBorder" BorderBrush="{Binding Path=Notes, Converter={StaticResource DayBorderColorConverter}}" BorderThickness="2">                                                
                                                
                                                <Border.Style>
                                                    <Style TargetType="{x:Type Border}">
                                                        <Style.Triggers>
                                                            <!--Current Day-->
                                                            <DataTrigger Binding="{Binding IsToday}" Value="true">
                                                                <Setter Property="Border.Background">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FF1EA6C8" Offset="0"/>
                                                                            <GradientStop Color="#FF0691B3" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>

                                                <DockPanel>
                                                    <!--Day Number-->
                                                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" FlowDirection="RightToLeft" Background="Transparent">
                                                        <TextBlock TextAlignment="Right" Text="{Binding Date, Converter={StaticResource DateConverter}, ConverterParameter=DAY}" FontSize="14" Margin="5,5,5,5">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsTargetMonth}" Value="false">
                                                                            <Setter Property="TextBlock.Foreground" Value="Gray"></Setter>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </StackPanel>

                                                    <!-- Content of a day -->
                                                    <ListBox x:Name="lbDayContent" IsEnabled="{Binding Enabled}" Background="Transparent" BorderThickness="0" BorderBrush="Transparent" 
                                                             ItemsSource="{Binding Events}" ItemContainerStyle="{StaticResource StyleDayContent}"/>

                                                    <DockPanel.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem x:Name="miAddEvent" Style="{StaticResource StyleMenuItemAddEvent}" Header="Add event"/>
                                                        </ContextMenu>
                                                    </DockPanel.ContextMenu>
                                                </DockPanel>
                                            </Border>
                                        </Border>

                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Rows="6" Columns="7" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
